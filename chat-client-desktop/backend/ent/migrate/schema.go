// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChatmateColumns holds the columns for the "chatmate" table.
	ChatmateColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "biz_id", Type: field.TypeInt64},
		{Name: "type", Type: field.TypeInt32},
		{Name: "name", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString},
		{Name: "last_message_id", Type: field.TypeInt64},
		{Name: "last_chat_time", Type: field.TypeInt64},
	}
	// ChatmateTable holds the schema information for the "chatmate" table.
	ChatmateTable = &schema.Table{
		Name:       "chatmate",
		Columns:    ChatmateColumns,
		PrimaryKey: []*schema.Column{ChatmateColumns[0]},
	}
	// ConfigColumns holds the columns for the "config" table.
	ConfigColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
	}
	// ConfigTable holds the schema information for the "config" table.
	ConfigTable = &schema.Table{
		Name:       "config",
		Columns:    ConfigColumns,
		PrimaryKey: []*schema.Column{ConfigColumns[0]},
	}
	// ContactColumns holds the columns for the "contact" table.
	ContactColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "username", Type: field.TypeString},
		{Name: "nickname", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString},
	}
	// ContactTable holds the schema information for the "contact" table.
	ContactTable = &schema.Table{
		Name:       "contact",
		Columns:    ContactColumns,
		PrimaryKey: []*schema.Column{ContactColumns[0]},
	}
	// GroupColumns holds the columns for the "group" table.
	GroupColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString},
		{Name: "owner", Type: field.TypeInt64},
		{Name: "size", Type: field.TypeInt32},
		{Name: "status", Type: field.TypeInt32},
	}
	// GroupTable holds the schema information for the "group" table.
	GroupTable = &schema.Table{
		Name:       "group",
		Columns:    GroupColumns,
		PrimaryKey: []*schema.Column{GroupColumns[0]},
	}
	// GroupMessageColumns holds the columns for the "group_message" table.
	GroupMessageColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "group_id", Type: field.TypeInt64},
		{Name: "sender", Type: field.TypeInt64},
		{Name: "recipient", Type: field.TypeInt64},
		{Name: "type", Type: field.TypeInt32},
		{Name: "content", Type: field.TypeString},
		{Name: "sent_time", Type: field.TypeInt64},
		{Name: "taken_time", Type: field.TypeInt64, Nullable: true},
		{Name: "seen_time", Type: field.TypeInt64, Nullable: true},
		{Name: "revoked_time", Type: field.TypeInt64, Nullable: true},
	}
	// GroupMessageTable holds the schema information for the "group_message" table.
	GroupMessageTable = &schema.Table{
		Name:       "group_message",
		Columns:    GroupMessageColumns,
		PrimaryKey: []*schema.Column{GroupMessageColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "groupmessage_group_id_sent_time",
				Unique:  false,
				Columns: []*schema.Column{GroupMessageColumns[1], GroupMessageColumns[6]},
			},
			{
				Name:    "groupmessage_sender_sent_time",
				Unique:  false,
				Columns: []*schema.Column{GroupMessageColumns[2], GroupMessageColumns[6]},
			},
			{
				Name:    "groupmessage_recipient_sent_time",
				Unique:  false,
				Columns: []*schema.Column{GroupMessageColumns[3], GroupMessageColumns[6]},
			},
		},
	}
	// MessageColumns holds the columns for the "message" table.
	MessageColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "sender", Type: field.TypeInt64},
		{Name: "recipient", Type: field.TypeInt64},
		{Name: "type", Type: field.TypeInt32},
		{Name: "content", Type: field.TypeString},
		{Name: "sent_time", Type: field.TypeInt64},
		{Name: "taken_time", Type: field.TypeInt64, Nullable: true},
		{Name: "seen_time", Type: field.TypeInt64, Nullable: true},
		{Name: "revoked_time", Type: field.TypeInt64, Nullable: true},
	}
	// MessageTable holds the schema information for the "message" table.
	MessageTable = &schema.Table{
		Name:       "message",
		Columns:    MessageColumns,
		PrimaryKey: []*schema.Column{MessageColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "message_sender_sent_time",
				Unique:  false,
				Columns: []*schema.Column{MessageColumns[1], MessageColumns[5]},
			},
			{
				Name:    "message_recipient_sent_time",
				Unique:  false,
				Columns: []*schema.Column{MessageColumns[2], MessageColumns[5]},
			},
		},
	}
	// SessionColumns holds the columns for the "session" table.
	SessionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "username", Type: field.TypeString},
		{Name: "nickname", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString},
		{Name: "access_token", Type: field.TypeString},
		{Name: "token_type", Type: field.TypeString},
		{Name: "expires_in", Type: field.TypeInt64},
		{Name: "login_time", Type: field.TypeInt64},
		{Name: "expired_time", Type: field.TypeInt64},
		{Name: "refresh_time", Type: field.TypeInt64},
	}
	// SessionTable holds the schema information for the "session" table.
	SessionTable = &schema.Table{
		Name:       "session",
		Columns:    SessionColumns,
		PrimaryKey: []*schema.Column{SessionColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChatmateTable,
		ConfigTable,
		ContactTable,
		GroupTable,
		GroupMessageTable,
		MessageTable,
		SessionTable,
	}
)

func init() {
	ChatmateTable.Annotation = &entsql.Annotation{
		Table: "chatmate",
	}
	ConfigTable.Annotation = &entsql.Annotation{
		Table: "config",
	}
	ContactTable.Annotation = &entsql.Annotation{
		Table: "contact",
	}
	GroupTable.Annotation = &entsql.Annotation{
		Table: "group",
	}
	GroupMessageTable.Annotation = &entsql.Annotation{
		Table: "group_message",
	}
	MessageTable.Annotation = &entsql.Annotation{
		Table: "message",
	}
	SessionTable.Annotation = &entsql.Annotation{
		Table: "session",
	}
}
